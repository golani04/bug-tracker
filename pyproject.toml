[tool.black]
line-length = 100
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
  )/
)
'''

[tool.isort]
profile = "black"
combine_as_imports = true
line_length = 100
lines_after_imports = 2
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.coverage.run]
# when line in code could jump to more than 
# one next line, track which destinations 
# were visited
branch = true

omit = '''
    # exclude tests folder
    tests/*
    # exclude venv files
    */venv/*
    # exclude init files
    *\__init__.py
'''

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if __name__ == .__main__.:"]

[tool.coverage.html]
directory = "reports"

[tool.pytest.ini_options]
minversion = "6.0"
# addopts = "--color=yes --cov=backend --cov-report=html --cov-report=term -ra"
testpaths = ["tests"]
markers = ["api"]

[tool.poetry]
name = "bug-tracker"
license = "MIT"
version = "0.2.0"
readme = "README.md"
description = "Register issues that occured in the projects."
authors = ["Leonid <golani04@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.76.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pydantic = {extras = ["dotenv", "email"], version = "^1.8.2"}
uvicorn = "^0.17.6"
requests = "^2.25.1"
SQLAlchemy = "^1.4.18"
Jinja2 = "^3.0.1"
aiofiles = "^0.8.0"
python-multipart = "^0.0.5"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}

[tool.poetry.dev-dependencies]
bandit = "^1.7.0"
black = "^22.3.0"
coverage = "^6.3.2"
flake8 = "^4.0.1"
freezegun = "^1.1.0"
isort = "^5.8.0"
pytest = "^7.1.2"
mypy = "^0.950"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
